/// <reference types="react" />
import type { Collapsed, CustomizeNode, DisplaySize, Editable } from '../types';
type OnEdit = (params: {
    newValue: any;
    oldValue: any;
    depth: number;
    src: any;
    indexOrName: string | number;
    parentType: 'object' | 'array';
}) => void;
type OnDelete = (params: {
    value: any;
    indexOrName: string | number;
    depth: number;
    src: any;
    parentType: 'object' | 'array';
}) => void;
type OnAdd = (params: {
    indexOrName: string | number;
    depth: number;
    src: any;
    parentType: 'object' | 'array';
}) => void;
type OnChange = (params: {
    indexOrName: string | number;
    depth: number;
    src: any;
    parentType: 'object' | 'array';
    type: 'add' | 'edit' | 'delete';
}) => void;
export declare const defaultURLRegExp: RegExp;
export declare const JsonViewContext: import("react").Context<{
    src: any;
    collapseStringsAfterLength: number;
    collapseStringMode: "directly" | "word" | "address";
    collapseObjectsAfterLength: number;
    collapsed: Collapsed;
    enableClipboard: boolean;
    editable: Editable;
    onEdit: OnEdit | undefined;
    onDelete: OnDelete | undefined;
    onAdd: OnAdd | undefined;
    onChange: OnChange | undefined;
    forceUpdate: () => void;
    customizeNode: CustomizeNode | undefined;
    customizeCopy: (node: any) => any;
    displaySize: DisplaySize;
    matchesURL: boolean;
    urlRegExp: RegExp;
    ignoreLargeArray: boolean;
}>;
interface Props {
    src: any;
    collapseStringsAfterLength?: number;
    collapseStringMode?: 'directly' | 'word' | 'address';
    collapseObjectsAfterLength?: number;
    collapsed?: Collapsed;
    enableClipboard?: boolean;
    editable?: Editable;
    onEdit?: OnEdit;
    onDelete?: OnDelete;
    onAdd?: OnAdd;
    onChange?: OnChange;
    customizeNode?: CustomizeNode;
    customizeCopy?: (node: any) => any;
    dark?: boolean;
    theme?: 'default' | 'a11y' | 'github' | 'vscode' | 'atom' | 'winter-is-coming';
    displaySize?: DisplaySize;
    style?: React.CSSProperties;
    className?: string;
    matchesURL?: boolean;
    urlRegExp?: RegExp;
    ignoreLargeArray?: boolean;
}
export default function JsonView({ src, collapseStringsAfterLength, collapseStringMode, collapseObjectsAfterLength, collapsed, enableClipboard, editable, onEdit, onDelete, onAdd, onChange, dark, theme, customizeNode, customizeCopy, displaySize, style, className, matchesURL, urlRegExp, ignoreLargeArray }: Props): JSX.Element;
export {};
